using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace AtoIndicator.Migrations
{
    public partial class mig_add_sellreport : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "tradeResult");

            migrationBuilder.CreateTable(
                name: "buyReports",
                columns: table => new
                {
                    dTradeTime = table.Column<DateTime>(nullable: false),
                    sCode = table.Column<string>(nullable: false),
                    nBuyStrategyIdx = table.Column<int>(nullable: false),
                    nBuyStrategySequenceIdx = table.Column<int>(nullable: false),
                    sCodeName = table.Column<string>(nullable: false),
                    nRqTime = table.Column<int>(nullable: false),
                    nReceiptTime = table.Column<int>(nullable: false),
                    nBuyEndTime = table.Column<int>(nullable: false),
                    nDeathRqTime = table.Column<int>(nullable: false),
                    nDeathTime = table.Column<int>(nullable: false),
                    nBuyPrice = table.Column<int>(nullable: false),
                    nDeathPrice = table.Column<int>(nullable: false),
                    nOrderPrice = table.Column<int>(nullable: false),
                    nOriginOrderPrice = table.Column<int>(nullable: false),
                    fProfit = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuy = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuy = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuy = table.Column<double>(nullable: false),
                    nMinPriceAfterBuy = table.Column<int>(nullable: false),
                    nMinTimeAfterBuy = table.Column<int>(nullable: false),
                    fMinPowerAfterBuy = table.Column<double>(nullable: false),
                    nMaxPriceMinuteAfterBuy = table.Column<int>(nullable: false),
                    nMaxTimeMinuteAfterBuy = table.Column<int>(nullable: false),
                    fMaxPowerMinuteAfterBuy = table.Column<double>(nullable: false),
                    nMinPriceMinuteAfterBuy = table.Column<int>(nullable: false),
                    nMinTimeMinuteAfterBuy = table.Column<int>(nullable: false),
                    fMinPowerMinuteAfterBuy = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuyWhile10 = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuyWhile10 = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuyWhile10 = table.Column<double>(nullable: false),
                    nMinPriceAfterBuyWhile10 = table.Column<int>(nullable: false),
                    nMinTimeAfterBuyWhile10 = table.Column<int>(nullable: false),
                    fMinPowerAfterBuyWhile10 = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuyWhile30 = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuyWhile30 = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuyWhile30 = table.Column<double>(nullable: false),
                    nMinPriceAfterBuyWhile30 = table.Column<int>(nullable: false),
                    nMinTimeAfterBuyWhile30 = table.Column<int>(nullable: false),
                    fMinPowerAfterBuyWhile30 = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuyWhile60 = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuyWhile60 = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuyWhile60 = table.Column<double>(nullable: false),
                    nMinPriceAfterBuyWhile60 = table.Column<int>(nullable: false),
                    nMinTimeAfterBuyWhile60 = table.Column<int>(nullable: false),
                    fMinPowerAfterBuyWhile60 = table.Column<double>(nullable: false),
                    isAllSelled = table.Column<bool>(nullable: false),
                    isAllBuyed = table.Column<bool>(nullable: false),
                    nBuyVolume = table.Column<int>(nullable: false),
                    sBuyStrategyName = table.Column<string>(nullable: true),
                    sSellStrategyMsg = table.Column<string>(nullable: true),
                    fStartGap = table.Column<double>(nullable: false),
                    sType = table.Column<string>(nullable: true),
                    fPowerWithOutGap = table.Column<double>(nullable: false),
                    fPower = table.Column<double>(nullable: false),
                    fPlusCnt07 = table.Column<double>(nullable: false),
                    fMinusCnt07 = table.Column<double>(nullable: false),
                    fPlusCnt09 = table.Column<double>(nullable: false),
                    fMinusCnt09 = table.Column<double>(nullable: false),
                    fPowerJar = table.Column<double>(nullable: false),
                    fOnlyDownPowerJar = table.Column<double>(nullable: false),
                    fOnlyUpPowerJar = table.Column<double>(nullable: false),
                    nTradeCnt = table.Column<int>(nullable: false),
                    nChegyulCnt = table.Column<int>(nullable: false),
                    nHogaCnt = table.Column<int>(nullable: false),
                    nNoMoveCnt = table.Column<int>(nullable: false),
                    nFewSpeedCnt = table.Column<int>(nullable: false),
                    nMissCnt = table.Column<int>(nullable: false),
                    lTotalTradeVolume = table.Column<long>(nullable: false),
                    lTotalBuyVolume = table.Column<long>(nullable: false),
                    lTotalSellVolume = table.Column<long>(nullable: false),
                    nAccumUpDownCount = table.Column<int>(nullable: false),
                    lTotalTradePrice = table.Column<long>(nullable: false),
                    lTotalBuyPrice = table.Column<long>(nullable: false),
                    lTotalSellPrice = table.Column<long>(nullable: false),
                    lMarketCap = table.Column<long>(nullable: false),
                    nAccumCountRanking = table.Column<int>(nullable: false),
                    nMarketCapRanking = table.Column<int>(nullable: false),
                    nPowerRanking = table.Column<int>(nullable: false),
                    nTotalBuyPriceRanking = table.Column<int>(nullable: false),
                    nTotalBuyVolumeRanking = table.Column<int>(nullable: false),
                    nTotalTradePriceRanking = table.Column<int>(nullable: false),
                    nTotalTradeVolumeRanking = table.Column<int>(nullable: false),
                    nTotalRank = table.Column<int>(nullable: false),
                    nMinuteTotalRank = table.Column<int>(nullable: false),
                    nMinuteTradePriceRanking = table.Column<int>(nullable: false),
                    nMinuteTradeVolumeRanking = table.Column<int>(nullable: false),
                    nMinuteBuyPriceRanking = table.Column<int>(nullable: false),
                    nMinuteBuyVolumeRanking = table.Column<int>(nullable: false),
                    nMinutePowerRanking = table.Column<int>(nullable: false),
                    nMinuteCountRanking = table.Column<int>(nullable: false),
                    nMinuteUpDownRanking = table.Column<int>(nullable: false),
                    nFakeBuyCnt = table.Column<int>(nullable: false),
                    nFakeAssistantCnt = table.Column<int>(nullable: false),
                    nFakeResistCnt = table.Column<int>(nullable: false),
                    nPriceUpCnt = table.Column<int>(nullable: false),
                    nPriceDownCnt = table.Column<int>(nullable: false),
                    nTotalFakeCnt = table.Column<int>(nullable: false),
                    nTotalFakeMinuteCnt = table.Column<int>(nullable: false),
                    nUpCandleCnt = table.Column<int>(nullable: false),
                    nDownCandleCnt = table.Column<int>(nullable: false),
                    nUpTailCnt = table.Column<int>(nullable: false),
                    nDownTailCnt = table.Column<int>(nullable: false),
                    nShootingCnt = table.Column<int>(nullable: false),
                    nCandleTwoOverRealCnt = table.Column<int>(nullable: false),
                    nCandleTwoOverRealNoLeafCnt = table.Column<int>(nullable: false),
                    nFs = table.Column<int>(nullable: false),
                    nFb = table.Column<int>(nullable: false),
                    fSpeedCur = table.Column<double>(nullable: false),
                    fHogaSpeedCur = table.Column<double>(nullable: false),
                    fTradeCur = table.Column<double>(nullable: false),
                    fPureTradeCur = table.Column<double>(nullable: false),
                    fPureBuyCur = table.Column<double>(nullable: false),
                    fHogaRatioCur = table.Column<double>(nullable: false),
                    fSharePerHoga = table.Column<double>(nullable: false),
                    fSharePerTrade = table.Column<double>(nullable: false),
                    fHogaPerTrade = table.Column<double>(nullable: false),
                    fTradePerPure = table.Column<double>(nullable: false),
                    fMaDownFsVal = table.Column<double>(nullable: false),
                    fMa20mVal = table.Column<double>(nullable: false),
                    fMa1hVal = table.Column<double>(nullable: false),
                    fMa2hVal = table.Column<double>(nullable: false),
                    fMaxMaDownFsVal = table.Column<double>(nullable: false),
                    fMaxMa20mVal = table.Column<double>(nullable: false),
                    fMaxMa1hVal = table.Column<double>(nullable: false),
                    fMaxMa2hVal = table.Column<double>(nullable: false),
                    nMaxMaDownFsTime = table.Column<double>(nullable: false),
                    nMaxMa20mTime = table.Column<double>(nullable: false),
                    nMaxMa1hTime = table.Column<double>(nullable: false),
                    nMaxMa2hTime = table.Column<double>(nullable: false),
                    nDownCntMa20m = table.Column<int>(nullable: false),
                    nDownCntMa1h = table.Column<int>(nullable: false),
                    nDownCntMa2h = table.Column<int>(nullable: false),
                    nUpCntMa20m = table.Column<int>(nullable: false),
                    nUpCntMa1h = table.Column<int>(nullable: false),
                    nUpCntMa2h = table.Column<int>(nullable: false),
                    fMSlope = table.Column<double>(nullable: false),
                    fISlope = table.Column<double>(nullable: false),
                    fTSlope = table.Column<double>(nullable: false),
                    fHSlope = table.Column<double>(nullable: false),
                    fRSlope = table.Column<double>(nullable: false),
                    fDSlope = table.Column<double>(nullable: false),
                    fMAngle = table.Column<double>(nullable: false),
                    fIAngle = table.Column<double>(nullable: false),
                    fTAngle = table.Column<double>(nullable: false),
                    fHAngle = table.Column<double>(nullable: false),
                    fRAngle = table.Column<double>(nullable: false),
                    fDAngle = table.Column<double>(nullable: false),
                    nCrushCnt = table.Column<int>(nullable: false),
                    nCrushUpCnt = table.Column<int>(nullable: false),
                    nCrushDownCnt = table.Column<int>(nullable: false),
                    nCrushSpecialDownCnt = table.Column<int>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_buyReports", x => new { x.dTradeTime, x.sCode, x.nBuyStrategyIdx, x.nBuyStrategySequenceIdx });
                });

            migrationBuilder.CreateTable(
                name: "sellReports",
                columns: table => new
                {
                    dTradeTime = table.Column<DateTime>(nullable: false),
                    sCode = table.Column<string>(nullable: false),
                    nBuyStrategyIdx = table.Column<int>(nullable: false),
                    nBuyStrategySequenceIdx = table.Column<int>(nullable: false),
                    sCodeName = table.Column<string>(nullable: false),
                    isAllSelled = table.Column<bool>(nullable: false),
                    nSumCut = table.Column<int>(nullable: false),
                    sBuyStrategyName = table.Column<string>(nullable: true),
                    sSellStrategyMsg = table.Column<string>(nullable: true),
                    nDeathRqTime = table.Column<int>(nullable: false),
                    nDeathTime = table.Column<int>(nullable: false),
                    nDeathPrice = table.Column<int>(nullable: false),
                    fProfit = table.Column<double>(nullable: false),
                    nBuyVolume = table.Column<int>(nullable: false),
                    nRqTime = table.Column<int>(nullable: false),
                    nReceiptTime = table.Column<int>(nullable: false),
                    nBuyEndTime = table.Column<int>(nullable: false),
                    nBuyPrice = table.Column<int>(nullable: false),
                    nTradeType = table.Column<int>(nullable: false),
                    nCurLineIdx = table.Column<int>(nullable: false),
                    nSlotCount = table.Column<int>(nullable: false),
                    nLastTouchLineTime = table.Column<int>(nullable: false),
                    nSlotDownCntMa2m = table.Column<int>(nullable: false),
                    nSlotDownCntMa10m = table.Column<int>(nullable: false),
                    nSlotDownCntMa20m = table.Column<int>(nullable: false),
                    nSlotUpCntMa2m = table.Column<int>(nullable: false),
                    nSlotUpCntMa10m = table.Column<int>(nullable: false),
                    nSlotUpCntMa20m = table.Column<int>(nullable: false),
                    fSlotMaDownFsVal = table.Column<double>(nullable: false),
                    fSlotMa2mVal = table.Column<double>(nullable: false),
                    fSlotMa10mVal = table.Column<double>(nullable: false),
                    fSlotMa20mVal = table.Column<double>(nullable: false),
                    fSlotMaxMaDownFsVal = table.Column<double>(nullable: false),
                    fSlotMaxMa2mVal = table.Column<double>(nullable: false),
                    fSlotMaxMa10mVal = table.Column<double>(nullable: false),
                    fSlotMaxMa20mVal = table.Column<double>(nullable: false),
                    nSlotMaxMaDownFsTime = table.Column<double>(nullable: false),
                    nSlotMaxMa2mTime = table.Column<double>(nullable: false),
                    nSlotMaxMa10mTime = table.Column<double>(nullable: false),
                    nSlotMaxMa20mTime = table.Column<double>(nullable: false),
                    fSlotMSlope = table.Column<double>(nullable: false),
                    fSlotISlope = table.Column<double>(nullable: false),
                    fSlotTSlope = table.Column<double>(nullable: false),
                    fSlotHSlope = table.Column<double>(nullable: false),
                    fSlotRSlope = table.Column<double>(nullable: false),
                    fSlotDSlope = table.Column<double>(nullable: false),
                    fSlotMAngle = table.Column<double>(nullable: false),
                    fSlotIAngle = table.Column<double>(nullable: false),
                    fSlotTAngle = table.Column<double>(nullable: false),
                    fSlotHAngle = table.Column<double>(nullable: false),
                    fSlotRAngle = table.Column<double>(nullable: false),
                    fSlotDAngle = table.Column<double>(nullable: false),
                    nDownCntMa20m = table.Column<int>(nullable: false),
                    nDownCntMa1h = table.Column<int>(nullable: false),
                    nDownCntMa2h = table.Column<int>(nullable: false),
                    nUpCntMa20m = table.Column<int>(nullable: false),
                    nUpCntMa1h = table.Column<int>(nullable: false),
                    nUpCntMa2h = table.Column<int>(nullable: false),
                    fMaDownFsVal = table.Column<double>(nullable: false),
                    fMa20mVal = table.Column<double>(nullable: false),
                    fMa1hVal = table.Column<double>(nullable: false),
                    fMa2hVal = table.Column<double>(nullable: false),
                    fMaxMaDownFsVal = table.Column<double>(nullable: false),
                    fMaxMa20mVal = table.Column<double>(nullable: false),
                    fMaxMa1hVal = table.Column<double>(nullable: false),
                    fMaxMa2hVal = table.Column<double>(nullable: false),
                    nMaxMaDownFsTime = table.Column<double>(nullable: false),
                    nMaxMa20mTime = table.Column<double>(nullable: false),
                    nMaxMa1hTime = table.Column<double>(nullable: false),
                    nMaxMa2hTime = table.Column<double>(nullable: false),
                    fMSlope = table.Column<double>(nullable: false),
                    fISlope = table.Column<double>(nullable: false),
                    fTSlope = table.Column<double>(nullable: false),
                    fHSlope = table.Column<double>(nullable: false),
                    fRSlope = table.Column<double>(nullable: false),
                    fDSlope = table.Column<double>(nullable: false),
                    fMAngle = table.Column<double>(nullable: false),
                    fIAngle = table.Column<double>(nullable: false),
                    fTAngle = table.Column<double>(nullable: false),
                    fHAngle = table.Column<double>(nullable: false),
                    fRAngle = table.Column<double>(nullable: false),
                    fDAngle = table.Column<double>(nullable: false),
                    fSpeedCur = table.Column<double>(nullable: false),
                    fHogaSpeedCur = table.Column<double>(nullable: false),
                    fTradeCur = table.Column<double>(nullable: false),
                    fPureTradeCur = table.Column<double>(nullable: false),
                    fPureBuyCur = table.Column<double>(nullable: false),
                    fHogaRatioCur = table.Column<double>(nullable: false),
                    fSharePerHoga = table.Column<double>(nullable: false),
                    fSharePerTrade = table.Column<double>(nullable: false),
                    fHogaPerTrade = table.Column<double>(nullable: false),
                    fTradePerPure = table.Column<double>(nullable: false),
                    nFs = table.Column<int>(nullable: false),
                    nFb = table.Column<int>(nullable: false),
                    fStartGap = table.Column<double>(nullable: false),
                    sType = table.Column<string>(nullable: true),
                    fPowerWithOutGap = table.Column<double>(nullable: false),
                    fPower = table.Column<double>(nullable: false),
                    fPlusCnt07 = table.Column<double>(nullable: false),
                    fMinusCnt07 = table.Column<double>(nullable: false),
                    fPlusCnt09 = table.Column<double>(nullable: false),
                    fMinusCnt09 = table.Column<double>(nullable: false),
                    fPowerJar = table.Column<double>(nullable: false),
                    fOnlyUpPowerJar = table.Column<double>(nullable: false),
                    fOnlyDownPowerJar = table.Column<double>(nullable: false),
                    nChegyulCnt = table.Column<int>(nullable: false),
                    nMaxPriceAfterBuy = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuy = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuy = table.Column<double>(nullable: false),
                    nMinPriceAfterBuy = table.Column<int>(nullable: false),
                    nMinTimeAfterBuy = table.Column<int>(nullable: false),
                    fMinPowerAfterBuy = table.Column<double>(nullable: false),
                    nMaxPriceMinuteAfterBuy = table.Column<int>(nullable: false),
                    nMaxTimeMinuteAfterBuy = table.Column<int>(nullable: false),
                    fMaxPowerMinuteAfterBuy = table.Column<double>(nullable: false),
                    nMinPriceMinuteAfterBuy = table.Column<int>(nullable: false),
                    nMinTimeMinuteAfterBuy = table.Column<int>(nullable: false),
                    fMinPowerMinuteAfterBuy = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuyWhile10 = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuyWhile10 = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuyWhile10 = table.Column<double>(nullable: false),
                    nMinPriceAfterBuyWhile10 = table.Column<int>(nullable: false),
                    nMinTimeAfterBuyWhile10 = table.Column<int>(nullable: false),
                    fMinPowerAfterBuyWhile10 = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuyWhile30 = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuyWhile30 = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuyWhile30 = table.Column<double>(nullable: false),
                    nMinPriceAfterBuyWhile30 = table.Column<int>(nullable: false),
                    nMinTimeAfterBuyWhile30 = table.Column<int>(nullable: false),
                    fMinPowerAfterBuyWhile30 = table.Column<double>(nullable: false),
                    nMaxPriceAfterBuyWhile60 = table.Column<int>(nullable: false),
                    nMaxTimeAfterBuyWhile60 = table.Column<int>(nullable: false),
                    fMaxPowerAfterBuyWhile60 = table.Column<double>(nullable: false),
                    nMinPriceAfterBuyWhile60 = table.Column<int>(nullable: false),
                    nMinTimeAfterBuyWhile60 = table.Column<int>(nullable: false),
                    fMinPowerAfterBuyWhile60 = table.Column<double>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_sellReports", x => new { x.dTradeTime, x.sCode, x.nBuyStrategyIdx, x.nBuyStrategySequenceIdx });
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "buyReports");

            migrationBuilder.DropTable(
                name: "sellReports");

            migrationBuilder.CreateTable(
                name: "tradeResult",
                columns: table => new
                {
                    dTradeTime = table.Column<DateTime>(type: "datetime(6)", nullable: false),
                    sCode = table.Column<string>(type: "varchar(255) CHARACTER SET utf8mb4", nullable: false),
                    nBuyStrategyIdx = table.Column<int>(type: "int", nullable: false),
                    nBuyStrategySequenceIdx = table.Column<int>(type: "int", nullable: false),
                    fDAngle = table.Column<double>(type: "double", nullable: false),
                    fDSlope = table.Column<double>(type: "double", nullable: false),
                    fHAngle = table.Column<double>(type: "double", nullable: false),
                    fHSlope = table.Column<double>(type: "double", nullable: false),
                    fHogaPerTrade = table.Column<double>(type: "double", nullable: false),
                    fHogaRatioCur = table.Column<double>(type: "double", nullable: false),
                    fHogaSpeedCur = table.Column<double>(type: "double", nullable: false),
                    fIAngle = table.Column<double>(type: "double", nullable: false),
                    fISlope = table.Column<double>(type: "double", nullable: false),
                    fMAngle = table.Column<double>(type: "double", nullable: false),
                    fMSlope = table.Column<double>(type: "double", nullable: false),
                    fMa1hVal = table.Column<double>(type: "double", nullable: false),
                    fMa20mVal = table.Column<double>(type: "double", nullable: false),
                    fMa2hVal = table.Column<double>(type: "double", nullable: false),
                    fMaDownFsVal = table.Column<double>(type: "double", nullable: false),
                    fMaxMa1hVal = table.Column<double>(type: "double", nullable: false),
                    fMaxMa20mVal = table.Column<double>(type: "double", nullable: false),
                    fMaxMa2hVal = table.Column<double>(type: "double", nullable: false),
                    fMaxMaDownFsVal = table.Column<double>(type: "double", nullable: false),
                    fMaxPowerAfterBuy = table.Column<double>(type: "double", nullable: false),
                    fMaxPowerAfterBuyWhile10 = table.Column<double>(type: "double", nullable: false),
                    fMaxPowerAfterBuyWhile30 = table.Column<double>(type: "double", nullable: false),
                    fMaxPowerAfterBuyWhile60 = table.Column<double>(type: "double", nullable: false),
                    fMaxPowerMinuteAfterBuy = table.Column<double>(type: "double", nullable: false),
                    fMinPowerAfterBuy = table.Column<double>(type: "double", nullable: false),
                    fMinPowerAfterBuyWhile10 = table.Column<double>(type: "double", nullable: false),
                    fMinPowerAfterBuyWhile30 = table.Column<double>(type: "double", nullable: false),
                    fMinPowerAfterBuyWhile60 = table.Column<double>(type: "double", nullable: false),
                    fMinPowerMinuteAfterBuy = table.Column<double>(type: "double", nullable: false),
                    fMinusCnt07 = table.Column<double>(type: "double", nullable: false),
                    fMinusCnt09 = table.Column<double>(type: "double", nullable: false),
                    fPlusCnt07 = table.Column<double>(type: "double", nullable: false),
                    fPlusCnt09 = table.Column<double>(type: "double", nullable: false),
                    fPower = table.Column<double>(type: "double", nullable: false),
                    fPowerJar = table.Column<double>(type: "double", nullable: false),
                    fPowerWithOutGap = table.Column<double>(type: "double", nullable: false),
                    fProfit = table.Column<double>(type: "double", nullable: false),
                    fPureBuyCur = table.Column<double>(type: "double", nullable: false),
                    fPureTradeCur = table.Column<double>(type: "double", nullable: false),
                    fRAngle = table.Column<double>(type: "double", nullable: false),
                    fRSlope = table.Column<double>(type: "double", nullable: false),
                    fSharePerHoga = table.Column<double>(type: "double", nullable: false),
                    fSharePerTrade = table.Column<double>(type: "double", nullable: false),
                    fSpeedCur = table.Column<double>(type: "double", nullable: false),
                    fStartGap = table.Column<double>(type: "double", nullable: false),
                    fTAngle = table.Column<double>(type: "double", nullable: false),
                    fTSlope = table.Column<double>(type: "double", nullable: false),
                    fTradeCur = table.Column<double>(type: "double", nullable: false),
                    fTradePerPure = table.Column<double>(type: "double", nullable: false),
                    isAllBuyed = table.Column<bool>(type: "tinyint(1)", nullable: false),
                    isAllSelled = table.Column<bool>(type: "tinyint(1)", nullable: false),
                    lMarketCap = table.Column<long>(type: "bigint", nullable: false),
                    lTotalBuyPrice = table.Column<long>(type: "bigint", nullable: false),
                    lTotalBuyVolume = table.Column<long>(type: "bigint", nullable: false),
                    lTotalSellPrice = table.Column<long>(type: "bigint", nullable: false),
                    lTotalSellVolume = table.Column<long>(type: "bigint", nullable: false),
                    lTotalTradePrice = table.Column<long>(type: "bigint", nullable: false),
                    lTotalTradeVolume = table.Column<long>(type: "bigint", nullable: false),
                    nAccumCountRanking = table.Column<int>(type: "int", nullable: false),
                    nAccumUpDownCount = table.Column<int>(type: "int", nullable: false),
                    nBuyEndTime = table.Column<int>(type: "int", nullable: false),
                    nBuyPrice = table.Column<int>(type: "int", nullable: false),
                    nBuyVolume = table.Column<int>(type: "int", nullable: false),
                    nCandleTwoOverRealCnt = table.Column<int>(type: "int", nullable: false),
                    nCandleTwoOverRealNoLeafCnt = table.Column<int>(type: "int", nullable: false),
                    nChegyulCnt = table.Column<int>(type: "int", nullable: false),
                    nCrushCnt = table.Column<int>(type: "int", nullable: false),
                    nCrushDownCnt = table.Column<int>(type: "int", nullable: false),
                    nCrushSpecialDownCnt = table.Column<int>(type: "int", nullable: false),
                    nCrushUpCnt = table.Column<int>(type: "int", nullable: false),
                    nDeathPrice = table.Column<int>(type: "int", nullable: false),
                    nDeathTime = table.Column<int>(type: "int", nullable: false),
                    nDownCandleCnt = table.Column<int>(type: "int", nullable: false),
                    nDownCntMa1h = table.Column<int>(type: "int", nullable: false),
                    nDownCntMa20m = table.Column<int>(type: "int", nullable: false),
                    nDownCntMa2h = table.Column<int>(type: "int", nullable: false),
                    nDownTailCnt = table.Column<int>(type: "int", nullable: false),
                    nFakeAssistantCnt = table.Column<int>(type: "int", nullable: false),
                    nFakeBuyCnt = table.Column<int>(type: "int", nullable: false),
                    nFakeResistCnt = table.Column<int>(type: "int", nullable: false),
                    nFb = table.Column<int>(type: "int", nullable: false),
                    nFewSpeedCnt = table.Column<int>(type: "int", nullable: false),
                    nFs = table.Column<int>(type: "int", nullable: false),
                    nHogaCnt = table.Column<int>(type: "int", nullable: false),
                    nMarketCapRanking = table.Column<int>(type: "int", nullable: false),
                    nMaxMa1hTime = table.Column<double>(type: "double", nullable: false),
                    nMaxMa20mTime = table.Column<double>(type: "double", nullable: false),
                    nMaxMa2hTime = table.Column<double>(type: "double", nullable: false),
                    nMaxMaDownFsTime = table.Column<double>(type: "double", nullable: false),
                    nMaxPriceAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMaxPriceAfterBuyWhile10 = table.Column<int>(type: "int", nullable: false),
                    nMaxPriceAfterBuyWhile30 = table.Column<int>(type: "int", nullable: false),
                    nMaxPriceAfterBuyWhile60 = table.Column<int>(type: "int", nullable: false),
                    nMaxPriceMinuteAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMaxTimeAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMaxTimeAfterBuyWhile10 = table.Column<int>(type: "int", nullable: false),
                    nMaxTimeAfterBuyWhile30 = table.Column<int>(type: "int", nullable: false),
                    nMaxTimeAfterBuyWhile60 = table.Column<int>(type: "int", nullable: false),
                    nMaxTimeMinuteAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMinPriceAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMinPriceAfterBuyWhile10 = table.Column<int>(type: "int", nullable: false),
                    nMinPriceAfterBuyWhile30 = table.Column<int>(type: "int", nullable: false),
                    nMinPriceAfterBuyWhile60 = table.Column<int>(type: "int", nullable: false),
                    nMinPriceMinuteAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMinTimeAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMinTimeAfterBuyWhile10 = table.Column<int>(type: "int", nullable: false),
                    nMinTimeAfterBuyWhile30 = table.Column<int>(type: "int", nullable: false),
                    nMinTimeAfterBuyWhile60 = table.Column<int>(type: "int", nullable: false),
                    nMinTimeMinuteAfterBuy = table.Column<int>(type: "int", nullable: false),
                    nMinuteBuyPriceRanking = table.Column<int>(type: "int", nullable: false),
                    nMinuteBuyVolumeRanking = table.Column<int>(type: "int", nullable: false),
                    nMinuteCountRanking = table.Column<int>(type: "int", nullable: false),
                    nMinutePowerRanking = table.Column<int>(type: "int", nullable: false),
                    nMinuteTotalRank = table.Column<int>(type: "int", nullable: false),
                    nMinuteTradePriceRanking = table.Column<int>(type: "int", nullable: false),
                    nMinuteTradeVolumeRanking = table.Column<int>(type: "int", nullable: false),
                    nMinuteUpDownRanking = table.Column<int>(type: "int", nullable: false),
                    nMissCnt = table.Column<int>(type: "int", nullable: false),
                    nNoMoveCnt = table.Column<int>(type: "int", nullable: false),
                    nOrderPrice = table.Column<int>(type: "int", nullable: false),
                    nOriginOrderPrice = table.Column<int>(type: "int", nullable: false),
                    nPowerRanking = table.Column<int>(type: "int", nullable: false),
                    nPriceDownCnt = table.Column<int>(type: "int", nullable: false),
                    nPriceUpCnt = table.Column<int>(type: "int", nullable: false),
                    nRqTime = table.Column<int>(type: "int", nullable: false),
                    nShootingCnt = table.Column<int>(type: "int", nullable: false),
                    nTotalBuyPriceRanking = table.Column<int>(type: "int", nullable: false),
                    nTotalBuyVolumeRanking = table.Column<int>(type: "int", nullable: false),
                    nTotalFakeCnt = table.Column<int>(type: "int", nullable: false),
                    nTotalFakeMinuteCnt = table.Column<int>(type: "int", nullable: false),
                    nTotalRank = table.Column<int>(type: "int", nullable: false),
                    nTotalTradePriceRanking = table.Column<int>(type: "int", nullable: false),
                    nTotalTradeVolumeRanking = table.Column<int>(type: "int", nullable: false),
                    nTradeCnt = table.Column<int>(type: "int", nullable: false),
                    nUpCandleCnt = table.Column<int>(type: "int", nullable: false),
                    nUpCntMa1h = table.Column<int>(type: "int", nullable: false),
                    nUpCntMa20m = table.Column<int>(type: "int", nullable: false),
                    nUpCntMa2h = table.Column<int>(type: "int", nullable: false),
                    nUpTailCnt = table.Column<int>(type: "int", nullable: false),
                    sBuyStrategyName = table.Column<string>(type: "longtext CHARACTER SET utf8mb4", nullable: true),
                    sCodeName = table.Column<string>(type: "longtext CHARACTER SET utf8mb4", nullable: false),
                    sSellStrategyMsg = table.Column<string>(type: "longtext CHARACTER SET utf8mb4", nullable: true),
                    sType = table.Column<string>(type: "longtext CHARACTER SET utf8mb4", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_tradeResult", x => new { x.dTradeTime, x.sCode, x.nBuyStrategyIdx, x.nBuyStrategySequenceIdx });
                });
        }
    }
}
